<?php
/**
 * Helper.
 *
 * @copyright Ralf Koester (RK)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Ralf Koester <ralf@familie-koester.de>.
 * @link http://k62.de
 * @link http://zikula.org
 * @version Generated by ModuleStudio (https://modulestudio.de).
 */

namespace RK\HelperModule\Event\Base;

use Symfony\Component\EventDispatcher\Event;
use RK\HelperModule\Entity\CarouselEntity;

/**
 * Event base class for filtering carousel processing.
 */
class AbstractFilterCarouselEvent extends Event
{
    /**
     * @var CarouselEntity Reference to treated entity instance.
     */
    protected $carousel;

    /**
     * @var array Entity change set for preUpdate events.
     */
    protected $entityChangeSet = [];

    /**
     * FilterCarouselEvent constructor.
     *
     * @param CarouselEntity $carousel Processed entity
     * @param array $entityChangeSet Change set for preUpdate events
     */
    public function __construct(CarouselEntity $carousel, $entityChangeSet = [])
    {
        $this->carousel = $carousel;
        $this->entityChangeSet = $entityChangeSet;
    }

    /**
     * Returns the entity.
     *
     * @return CarouselEntity
     */
    public function getCarousel()
    {
        return $this->carousel;
    }

    /**
     * Returns the change set.
     *
     * @return array
     */
    public function getEntityChangeSet()
    {
        return $this->entityChangeSet;
    }
}
